#!/usr/bin/env ruby

module Console
  module EffectRendering
    def apply_to(text)
      "#{generate}#{text}#{Console::Effects::OFF.generate}"
    end
  end

  module EffectChaining
    def combine_with(*effects)
      combined = CombinedEffect.new(self,*effects)
    end
  end

  class CombinedEffect
    include EffectRendering
    include EffectChaining

    def initialize(*effects)
      @effects = effects
    end

    def generate
      @effects.inject(""){|result,current| "#{result}#{current.generate}"}
    end
  end


  class Effect
    include EffectRendering
    include EffectChaining

    attr_reader :code_effect
    
    def initialize(code_effect)
      @code_effect = code_effect
    end

    def generate
      "\e[#{code_effect}m"
    end
  end

  class Effects
    OFF = Effect.new(0) 
    BRIGHT = Effect.new(1)
    UNDERLINE = Effect.new(1)
    BLINK = Effect.new(5)
    EXCHANGE_FOREGROUND_AND_BACKGROUND = Effect.new(7)
    HIDE_TEXT = Effect.new(8)
    BLACK_TEXT = Effect.new(30)
    RED_TEXT = Effect.new(31)
    GREEN_TEXT = Effect.new(32)
    YELLOW_TEXT = Effect.new(33)
    BLUE_TEXT = Effect.new(34)
    MAGENTA_TEXT = Effect.new(35)
    CYAN_TEXT = Effect.new(36)
    WHITE_TEXT = Effect.new(37)
    DEFAULT_TEXT_COLOUR = Effect.new(39)
    BLACK_BACKGROUND = Effect.new(40)
    RED_BACKGROUND = Effect.new(41)
    GREEN_BACKGROUND = Effect.new(42)
    YELLOW_BACKGROUND = Effect.new(43)
    BLUE_BACKGROUND = Effect.new(44)
    MAGENTA_BACKGROUND = Effect.new(45)
    CYAN_BACKGROUND = Effect.new(46)
    WHITE_BACKGROUND = Effect.new(47)
    DEFAULT_BACKGROUND = Effect.new(47)
  end
end

def render_text_with_effect(text,*effects)
  puts Console::CombinedEffect.new(*effects).apply_to text
end

render_text_with_effect("********************PROOF RUN********************",
                        Console::Effects::YELLOW_TEXT,
                        Console::Effects::BRIGHT)
  
file_to_run = ARGV[0]
lib = File.basename(Dir.pwd)
file_to_run = lib unless file_to_run

command = "ruby proofs/#{file_to_run}.rb"

raw_output = `#{command}`
puts raw_output



